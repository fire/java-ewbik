import ik.Bone;
import ik.IKPin;
import processing.Node3D;
import processing.Skeleton3D;
import processing.core.PApplet;
import processing.core.PGraphics;
import processing.core.PVector;
import processing.event.MouseEvent;

import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;

import ewbik.processing.singlePrecision.Kusudama;
import processing.core.PConstants;

class UI {
    PApplet pa;
    PGraphics display;
    PVector mouse = new PVector(0, 0, 0);
    PVector cameraPosition = new PVector(0, 0, 70);
    PVector lookAt = new PVector(0, 0, 0);
    PVector up = new PVector(0, 1, 0);
    float orthoHeight, orthoWidth;
    private PGraphics currentDrawSurface;

    public UI(PApplet p) {
        try {
            FileWriter writer = new FileWriter("kusudama_vert.glsl");
            writer.write(
                    "uniform mat4 transform;\r\n            uniform mat4 modelviewMatrix;\r\n            uniform mat4 modelMatrix;\r\n            uniform mat3 normalMatrix;\r\n            uniform vec3 lightNormal;\r\n            uniform mat4 modelViewInv; \r\n            \r\n            \r\n            attribute vec4 position;\r\n            attribute vec4 color;\r\n            attribute vec3 normal;\r\n            \r\n            varying vec4 vertColor;\r\n            varying vec3 vertNormal;\r\n            varying vec3 vertLightDir;\r\n            varying vec3 vertWorldNormal;\r\n            varying vec4 vertWorldPos; \r\n            varying vec4 posN;\r\n            \r\n            void main() {\r\n              gl_Position = transform * position;\r\n              vec4 f_normal = vec4(normal.x, normal.y, normal.z, 1.0); // vec4(normalize(normalMatrix * normal), 1.0);//\r\n              f_normal = position * modelViewInv;\r\n              //posN =  \r\n              vertColor = color;\r\n              vertNormal = f_normal.xyz;\r\n              vertLightDir = normal;\r\n              vertWorldNormal  = normalMatrix * normal;\r\n              vertWorldPos = transform * position;\r\n            }");
            writer.close();
            writer = new FileWriter("kusudama.glsl");
            writer.write(
                    "#ifdef GL_ES\r\nprecision mediump float;\r\nprecision mediump int;\r\n#endif\r\n\r\nvarying vec4 vertColor;\r\n\r\n//Model space normal direction of the current fragment\r\n//since we're on a sphere, this is literally just the fragment's position in \r\n//modelspace\r\nvarying vec3 vertNormal;\r\n\r\n//This shader can display up to 30 cones (represented by 30 4d vectors) \r\n// alphachannel represents radius, rgb channels represent xyz coordinates of \r\n// the cone direction vector in model space\r\nuniform vec4 coneSequence[30];\r\nuniform int coneCount; \r\n \r\n//Make this \"true\" for sceendoor transparency (randomly discarding fragments)\r\n//so that you can blur the result in another pass. Otherwise make it  \r\n//false for a solid shell.  \r\nuniform bool multiPass;\r\n\r\n//Following three varyings are \r\n//Only used for fake lighting. \r\n//Not conceptually relevant\r\nvarying vec3 vertWorldNormal;\r\nvarying vec3 vertLightDir;\r\nvarying vec4 vertWorldPos;\r\n\r\n\r\n///NOISE FUNCTIONS FOR FANCY TRANSPARENCY RENDERING\r\nfloat hash( uint n ) { // from https://www.shadertoy.com/view/llGSzw  Base: Hugo Elias. ToFloat: http://iquilezles.org/www/articles/sfrand/sfrand.htm\r\n\tn = (n << 13U) ^ n;\r\n    n = n * (n * n * 15731U + 789221U) + 1376312589U;\r\n    return uintBitsToFloat( (n>>9U) | 0x3f800000U ) - 1.;\r\n}\r\n\r\nfloat noise(vec2 U) {\r\n    return hash(uint(U.x+5000.0*U.y));\r\n}\r\n\r\nbool randBit(vec2 U) {\r\n\tfloat dist2 = 1.0;\r\n\treturn 0.5 < (noise(U) * 4. -(noise(U+vec2(dist2,0.))+noise(U+vec2(0.,dist2))+noise(U-vec2(0.,dist2))+noise(U-vec2(dist2,0.))) + 0.5);\r\n}\r\n///END OF NOISE FUNCTIONS FOR FANCY TRANSPARENCY RENDERING.\r\n\r\nbool isInInterConePath(in vec3 normalDir, in vec4 tangent1, in vec4 cone1, in vec4 tangent2, in vec4 cone2) {\t\t\t\r\n\tvec3 c1xc2 = cross(cone1.xyz, cone2.xyz);\t\t\r\n\tfloat c1c2dir = dot(normalDir, c1xc2);\r\n\t\t\r\n\tif(c1c2dir < 0.0) { \r\n\t\tvec3 c1xt1 = cross(cone1.xyz, tangent1.xyz); \r\n\t\tvec3 t1xc2 = cross(tangent1.xyz, cone2.xyz);\t\r\n\t\tfloat c1t1dir = dot(normalDir, c1xt1);\r\n\t\tfloat t1c2dir = dot(normalDir, t1xc2);\r\n\t\t\r\n\t \treturn (c1t1dir > 0.0 && t1c2dir > 0.0); \r\n\t\t\t\r\n\t}else {\r\n\t\tvec3 t2xc1 = cross(tangent2.xyz, cone1.xyz);\t\r\n\t\tvec3 c2xt2 = cross(cone2.xyz, tangent2.xyz);\t\r\n\t\tfloat t2c1dir = dot(normalDir, t2xc1);\r\n\t\tfloat c2t2dir = dot(normalDir, c2xt2);\r\n\t\t\r\n\t\treturn (c2t2dir > 0.0 && t2c1dir > 0.0);\r\n\t}\t\r\n\treturn false;\r\n}\r\n\r\n//determines the current draw condition based on the desired draw condition in the setToArgument\r\n// -3 = disallowed entirely; \r\n// -2 = disallowed and on tangentCone boundary\r\n// -1 = disallowed and on controlCone boundary\r\n// 0 =  allowed and empty; \r\n// 1 =  allowed and on controlCone boundary\r\n// 2  = allowed and on tangentCone boundary\r\nint getAllowabilityCondition(in int currentCondition, in int setTo) {\r\n\tif((currentCondition == -1 || currentCondition == -2)\r\n\t\t&& setTo >= 0) {\r\n\t\treturn currentCondition *= -1;\r\n\t} else if(currentCondition == 0 && (setTo == -1 || setTo == -2)) {\r\n\t\treturn setTo *=-2;\r\n\t}  \t\r\n\treturn max(currentCondition, setTo);\r\n}\r\n\r\n\r\n\r\n//returns 1 if normalDir is beyond (cone.a) radians from cone.rgb\r\n//returns 0 if normalDir is within (cone.a + boundaryWidth) radians from cone.rgb \r\n//return -1 if normalDir is less than (cone.a) radians from cone.rgb\r\nint isInCone(in vec3 normalDir, in vec4 cone, in float boundaryWidth) {\r\n\tfloat arcDistToCone = acos(dot(normalDir, cone.rgb));\r\n\tif(arcDistToCone > (cone.a+(boundaryWidth/2.))) {\r\n\t\treturn 1; \r\n\t}\r\n\tif(arcDistToCone < cone.a-(boundaryWidth/2.)) {\r\n\t\treturn -1;\r\n\t}\r\n\treturn 0;\r\n} \r\n\r\n//returns a color corresponding to the allowability of this region, or otherwise the boundaries corresponding \r\n//to various cones and tangentCone \r\nvec4 colorAllowed(in vec3 normalDir,  in int coneCount, in float boundaryWidth) {\r\n\tnormalDir = normalize(normalDir);\r\n\tint currentCondition = -3;\r\n\t\r\n\tif(coneCount == 1) {\r\n\t\tvec4 cone = coneSequence[0];\r\n\t\tint inCone = isInCone(normalDir, cone, boundaryWidth);\r\n\t\tinCone = inCone == 0 ? -1 : inCone < 0 ? 0 : -3;\r\n\t\tcurrentCondition = getAllowabilityCondition(currentCondition, inCone);\r\n\t} else {\r\n\t\tfor(int i=0; i<coneCount-1; i+=3) {\r\n\t\t\t\r\n\t\t\tint idx = i*3; \r\n\t\t\tvec4 cone1 = coneSequence[idx];\r\n\t\t\tvec4 tangent1 = coneSequence[idx+1];\t\t\t\r\n\t\t\tvec4 tangent2 = coneSequence[idx+2];\t\t\t\r\n\t\t\tvec4 cone2 = coneSequence[idx+3];\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\tint inCone1 = isInCone(normalDir, cone1, boundaryWidth);\r\n\t\t\t\r\n\t\t\tinCone1 = inCone1 == 0 ? -1 : inCone1 < 0 ? 0 : -3;\r\n\t\t\tcurrentCondition = getAllowabilityCondition(currentCondition, inCone1);\r\n\t\t\t\t\r\n\t\t\tint inCone2 = isInCone(normalDir, cone2, boundaryWidth);\r\n\t\t\tinCone2 =  inCone2 == 0 ? -1 : inCone2  < 0 ? 0 : -3;\r\n\t\t\tcurrentCondition = getAllowabilityCondition(currentCondition, inCone2);\r\n\t\t\r\n\t\t\tint inTan1 = isInCone(normalDir, tangent1, boundaryWidth); \r\n\t\t\tint inTan2 = isInCone(normalDir, tangent2, boundaryWidth);\r\n\t\t\t\r\n\t\t\tif( inTan1 < 1. || inTan2  < 1.) {\t\t\t\r\n\t\t\t\tinTan1 =  inTan1 == 0 ? -2 : -3;\r\n\t\t\t\tcurrentCondition = getAllowabilityCondition(currentCondition, inTan1);\r\n\t\t\t\tinTan2 =  inTan2 == 0 ? -2 : -3;\r\n\t\t\t\tcurrentCondition = getAllowabilityCondition(currentCondition, inTan2);\r\n\t\t\t} else {\t\t\t\t \r\n\t\t\t\tbool inIntercone = isInInterConePath(normalDir, tangent1, cone1, tangent2, cone2);\r\n\t\t\t\tint interconeCondition = inIntercone ? 0 : -3; \r\n\t\t\t\tcurrentCondition = getAllowabilityCondition(currentCondition, interconeCondition);\t\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t}\t\r\n\t\r\n\tvec4 result = vertColor;\r\n\t\r\n\tif(multiPass && (currentCondition == -3 || currentCondition > 0)) {\r\n\t\t\r\n\t\t/////////\r\n\t\t//CODE FOR FANCY BLURRED TRANSPARENCY. \r\n\t\t//NOT OTHERWISE CONCEPTUALLY RELEVANT TO \r\n\t\t//TO VISUALIZATION\r\n\t\t////////\r\n\t\t\r\n\t\tvec3 randDir = vec3(normalDir.x  * noise(normalDir.xy)/50.0,  normalDir.y  * noise(normalDir.yz)/50.0, normalDir.z  * noise(normalDir.zx)/50.0);\r\n\t\trandDir = normalDir;\r\n\t\tfloat zAdd = abs(vertWorldPos.z);\r\n\t\tfloat lon = atan(randDir.x/randDir.z) + 3.14159265/2.0;\r\n\t\tfloat lat = atan(randDir.y/randDir.x) + 3.14159265/2.0;\r\n\t\t\t\t\r\n\t\tbool latDraw = randBit(vec2(lat, lon));//mod(lat, 0.005) < 0.00499;\r\n\t\tbool lonDraw = randBit(vec2(lon, lat));//mod(lon, 0.005) < 0.00499;\r\n\t\t\t\r\n\t\tif(randBit(vec2(lon, lat))) {\t\t\r\n\t\t\tresult = vec4(0.0,0.0,0.0,0.0);\t\r\n\t\t}\r\n\t\t////////\r\n\t\t//END CODE FOR FANCY BLURRED TRANSPARENCY\r\n\t\t///////\r\n\t} else if (currentCondition != 0) {\r\n\t\r\n\t\tfloat onTanBoundary = abs(currentCondition) == 2 ? 0.3 : 0.0; \r\n\t\tfloat onConeBoundary = abs(currentCondition) == 1 ? 0.3 : 0.0;\t\r\n\t\r\n\t\t//return distCol;\r\n\t\tresult += vec4(0.0, onConeBoundary, onTanBoundary, 1.0);\r\n\t} else {\r\n\t\tdiscard;\r\n\t}\r\n\treturn result;\r\n\t\t\t\r\n}\r\n\r\nvoid main() {\r\n\r\n  vec3 normalDir = normalize(vertNormal); // the vertex normal in Model Space.\r\n  float lightScalar = dot(vertLightDir, vec3(0.5,-1.,0.5)); \r\n  lightScalar *= lightScalar*lightScalar;\r\n  vec4 colorAllowed = colorAllowed(normalDir, coneCount, 0.02);  \r\n\r\n  if(colorAllowed.a == 0.0)\r\n  \tdiscard;\r\n  \t\r\n  colorAllowed += (colorAllowed + fwidth(colorAllowed)); \r\n  colorAllowed /= 2.0;\r\n  vec3 lightCol = vec3(1.0,0.8,0.0);\r\n  float gain = vertWorldNormal.z < 0 ? -0.3 : 0.5;\r\n colorAllowed.rgb = (colorAllowed.rgb + lightCol*(lightScalar + gain)) / 2.;\r\n vec4 specCol = vec4(1.0, 1.0, 0.6, colorAllowed.a);  \r\n colorAllowed = colorAllowed.g > 0.8 ? colorAllowed+specCol : colorAllowed;  \t\r\n  \t\r\n  gl_FragColor = colorAllowed;\r\n}");
            writer.close();
        } catch (IOException e) {
            System.out.println("Can't write file.");
            e.printStackTrace();
        }
        pa = p;
        currentDrawSurface = pa.g;
        display = pa.createGraphics(p.width, p.height, PConstants.P3D);
        display.smooth(8);
        System.out.println(p.sketchPath());
        Kusudama.kusudamaShader = pa.loadShader("kusudama.glsl",
                "kusudama_vert.glsl");

    }

    public void drawInstructions(PGraphics pg, String append) {
        String appended = append == null ? "" : "-" + append;

        String instructionText = "-Click and drag to move the selected pin.\n"
                + "-To select a different pin, use the Up and Down arrows.\n"
                + "-Use the mouse wheel to rotate the pin about its (red) Y axis.\n"
                + "-Hold shift while using the mouse wheel to rotate the pin about its (blue) Z axis.\n"
                + "-Hold ctrl while using the mouse wheel to rotate the pin about its (green) X axis. \n"
                + appended;
        pg.textSize(12);
        pg.fill(0, 0, 0, 90);
        float boxW = pg.textWidth(instructionText);
        float boxH = (pg.textAscent() + pg.textDescent()) * (instructionText.split("\n").length);
        pg.rect((-pa.width / 2f) + 40, (-pa.height / 2f) + 15, boxW + 45, boxH + 40);
        pg.fill(255, 255, 255, 255);
        pg.emissive(255, 255, 255);
        pg.text(instructionText, (-pa.width / 2f) + 40f, -pa.height / 2f + 30f);

    }

    public void line(PGraphics pg, PVector p1, PVector p2) {
        pg.line(p1.x, p1.y, p1.z, p2.x, p2.y, p2.z);
    }

    public void point(PGraphics pg, PVector p) {
        pg.point(p.x, p.y, p.z);
    }

    public void drawPins(PGraphics pg, IKPin activePin,
                         float zoomScalar, float drawSize,
                         boolean cubeMode, Node3D cubeNode3D) {

        if (activePin != null) {
            Node3D ellipseAx;
            ellipseAx = cubeMode ? cubeNode3D : activePin.getAxes();
            PVector pinLoc = screenOf(pg, ellipseAx.origin(), zoomScalar);
            PVector pinX = screenOf(pg,
                    Node3D.toPVector(ellipseAx.calculateX().getScaledTo(drawSize)),
                    zoomScalar);
            PVector pinY = screenOf(pg,
                    Node3D.toPVector(ellipseAx.calculateY().getScaledTo(drawSize)),
                    zoomScalar);
            PVector pinZ = screenOf(pg,
                    Node3D.toPVector(ellipseAx.calculateZ().getScaledTo(drawSize)),
                    zoomScalar);
            pg.fill(255, 255, 255, 150);
            pg.stroke(255, 0, 255);
            float totalPriorities = activePin.getXPriority() + activePin.getYPriority()
                    + activePin.getZPriority();
            pg.ellipse(pinLoc.x, pinLoc.y, zoomScalar * 50, zoomScalar * 50);

            PVector effectorO = screenOf(pg,
                    Node3D.toPVector(activePin.forBone().localAxes().calculatePosition()),
                    zoomScalar);
            PVector effectorX = screenOf(pg,
                    Node3D
                            .toPVector(activePin.forBone().localAxes().calculateX().getScaledTo(drawSize)),
                    zoomScalar);
            PVector effectorY = screenOf(pg,
                    Node3D
                            .toPVector(activePin.forBone().localAxes().calculateY().getScaledTo(drawSize)),
                    zoomScalar);
            PVector effectorZ = screenOf(pg,
                    Node3D
                            .toPVector(activePin.forBone().localAxes().calculateZ().getScaledTo(drawSize)),
                    zoomScalar);
            pg.stroke(255, 255, 255, 150);

            if (!cubeMode) {
                float xPriority = activePin.getXPriority();
                float yPriority = activePin.getYPriority();
                float zPriority = activePin.getZPriority();
                drawPinEffectorHints(
                        pg,
                        pinLoc,
                        pinX, pinY, pinZ,
                        effectorO,
                        effectorX, effectorY, effectorZ,
                        xPriority, yPriority, zPriority, totalPriorities);
            }
        }
    }

    public void drawPinEffectorHints(PGraphics pg,
                                     PVector pinLoc,
                                     PVector pinX, PVector pinY, PVector pinZ,
                                     PVector effectorO,
                                     PVector effectorX, PVector effectorY, PVector effectorZ,
                                     float xPriority, float yPriority, float zPriority, float totalpriorities) {

        pg.line(pinLoc.x, pinLoc.y, pinLoc.z, effectorO.x, effectorO.y, effectorO.z);
        pg.stroke(2, 58, 0, 150);
        pg.strokeWeight(2f * xPriority / totalpriorities);
        pg.line(pinX.x, pinX.y, pinX.z, effectorX.x, effectorX.y, effectorX.z);
        pg.stroke(140, 0, 1, 150);
        pg.strokeWeight(2f * yPriority / totalpriorities);
        pg.line(pinY.x, pinY.y, pinY.z, effectorY.x, effectorY.y, effectorY.z);
        pg.stroke(0, 26, 130, 150);
        pg.strokeWeight(2f * zPriority / totalpriorities);
        pg.line(pinZ.x, pinZ.y, pinZ.z, effectorZ.x, effectorZ.y, effectorZ.z);

    }

    public void drawPass(float drawSize, Runnable preArmatureDraw, PGraphics buffer, Skeleton3D armature) {
        if (preArmatureDraw != null)
            preArmatureDraw.run();
        armature.drawMe(buffer, 100, drawSize);
    }

    public PVector screenOf(PGraphics pg, PVector pt, float zoomScalar) {
        return new PVector(
                (pg.screenX(pt.x, pt.y, pt.z) * zoomScalar) - orthoWidth / 2f,
                (pg.screenY(pt.x, pt.y, pt.z) * zoomScalar) - orthoHeight / 2f);
    }

    public void drawScene(float zoomScalar, float drawSize,
                          Runnable additionalDraw,
                          Skeleton3D armature,
                          String usageInstructions,
                          IKPin activePin, Node3D cubeNode3D, boolean cubeEnabled) {
        currentDrawSurface = display;
        display.beginDraw();
        setSceneAndCamera(display, zoomScalar);
        drawPass(drawSize, additionalDraw, display, armature);
        display.endDraw();

        currentDrawSurface = pa.g;
        setCamera(pa.g, zoomScalar);
        pa.background(169, 202, 239);
        pa.imageMode(PConstants.CENTER);
        pa.image(display, 0, 0, orthoWidth, orthoHeight);
        pa.resetMatrix();
        drawPins(pa.g, activePin, zoomScalar, drawSize, cubeEnabled, cubeNode3D);
        pa.resetMatrix();
        float cx = pa.width;
        float cy = pa.height;
        pa.ortho(-cx / 2f, cx / 2f, -cy / 2f, cy / 2f, -1000, 1000);
        drawInstructions(pa.g, usageInstructions);
        drawPins(pa.g, activePin, drawSize, zoomScalar, cubeEnabled, cubeNode3D);
        drawInstructions(pa.g, usageInstructions);

    }

    public void camera(PVector cp, PVector so, PVector up, PGraphics pg) {
        pg.camera(cp.x, cp.y, cp.z, so.x, so.y, so.z, up.x, up.y, up.z);
    }

    public void setSceneAndCamera(PGraphics pg, float zoomScalar) {
        setCamera(pg, zoomScalar);
        pg.directionalLight(148, 148, 148, 0, 100, 100);
        pg.directionalLight(148, 148, 148, 0, 100, -100);
        pg.directionalLight(148, 148, 148, 100, 100, 0);
        pg.directionalLight(148, 148, 148, -100, 100, 0);
        pg.directionalLight(48, 48, 48, 100, -10, 100);
        pg.directionalLight(48, 48, 48, 100, -10, -100);
        pg.directionalLight(48, 48, 48, -100, -10, 100);
        pg.directionalLight(48, 48, 48, -100, -10, -100);

    }

    public void setCamera(PGraphics pg, float zoomScalar) {
        pg.clear();
        orthoHeight = pa.height * zoomScalar;
        orthoWidth = ((float) pa.width / (float) pa.height) * orthoHeight;
        mouse.x = (pa.mouseX - (pa.width / 2f)) * (orthoWidth / pa.width);
        mouse.y = (pa.mouseY - (pa.height / 2f)) * (orthoHeight / pa.height);
        camera(cameraPosition, lookAt, up, pg);
        pg.ortho(-orthoWidth / 2f, orthoWidth / 2f, -orthoHeight / 2f, orthoHeight / 2f, -1000, 1000);
    }

    /**
     * @return the draw surface this class is currently operating on.
     *         This is used as kind of hack, so I don't have to bother writing
     *         interfaces just to render a box when using multi-pass.
     */
    public PGraphics getCurrentDrawSurface() {
        return currentDrawSurface;
    }

}

public class ItemHolding extends PApplet {

    Skeleton3D loadedArmature;
    ArrayList<IKPin> pins = new ArrayList<>();
    UI ui;
    IKPin activePin;
    Node3D worldNode3D, cubeNode3D;
    float zoomScalar = 200f / height;
    boolean cubeMode = true;

    public static void main(String[] args) {
        PApplet.main("ItemHolding");
    }

    public void settings() {
        size(1200, 900, P3D);
    }

    public void setup() {
        ui = new UI(this);

        try {
            FileWriter writer = new FileWriter("Humanoid_Holding_Item.arm");
            writer.write(
                    "{\r\n  \"armatures\": [{\r\n    \"localAxes\": \"1776900385-dAxes\",\r\n    \"rootBone\": \"39460173-dBone\",\r\n    \"identityHash\": \"1232661264-dArmature\",\r\n    \"defaultIterations\": 15,\r\n    \"tag\": \"example\",\r\n    \"dampening\": 0.05\r\n  }],\r\n  \"kusudamas\": [\r\n    {\r\n      \"limitAxes\": \"549115539-dAxes\",\r\n      \"painfulness\": 0,\r\n      \"identityHash\": \"1707386078-dKusudama\",\r\n      \"limitCones\": [\"1697899364-dLimitCone\"],\r\n      \"minAxialAngle\": -0.17453292519943295,\r\n      \"attachedTo\": \"1755714835-dBone\",\r\n      \"axialRange\": 0.3490658503988659,\r\n      \"axiallyConstrained\": true,\r\n      \"orientationallyConstrained\": true\r\n    },\r\n    {\r\n      \"limitAxes\": \"525443737-dAxes\",\r\n      \"painfulness\": 0.1,\r\n      \"identityHash\": \"56250132-dKusudama\",\r\n      \"limitCones\": [\"2011998365-dLimitCone\"],\r\n      \"minAxialAngle\": -0.3,\r\n      \"attachedTo\": \"2011832440-dBone\",\r\n      \"axialRange\": 1,\r\n      \"axiallyConstrained\": true,\r\n      \"orientationallyConstrained\": true\r\n    },\r\n    {\r\n      \"limitAxes\": \"1732297837-dAxes\",\r\n      \"painfulness\": 0,\r\n      \"identityHash\": \"524285115-dKusudama\",\r\n      \"limitCones\": [\"599313328-dLimitCone\"],\r\n      \"minAxialAngle\": -0.17453292519943295,\r\n      \"attachedTo\": \"492889448-dBone\",\r\n      \"axialRange\": 0.3490658503988659,\r\n      \"axiallyConstrained\": true,\r\n      \"orientationallyConstrained\": true\r\n    },\r\n    {\r\n      \"limitAxes\": \"228212540-dAxes\",\r\n      \"painfulness\": 0,\r\n      \"identityHash\": \"1302819278-dKusudama\",\r\n      \"limitCones\": [\"67417462-dLimitCone\"],\r\n      \"minAxialAngle\": -0.17453292519943295,\r\n      \"attachedTo\": \"2053282363-dBone\",\r\n      \"axialRange\": 0.3490658503988659,\r\n      \"axiallyConstrained\": true,\r\n      \"orientationallyConstrained\": true\r\n    },\r\n    {\r\n      \"limitAxes\": \"893900186-dAxes\",\r\n      \"painfulness\": 0,\r\n      \"identityHash\": \"478565887-dKusudama\",\r\n      \"limitCones\": [\"348648077-dLimitCone\"],\r\n      \"minAxialAngle\": -0.17453292519943295,\r\n      \"attachedTo\": \"383757870-dBone\",\r\n      \"axialRange\": 0.3490658503988659,\r\n      \"axiallyConstrained\": true,\r\n      \"orientationallyConstrained\": true\r\n    },\r\n    {\r\n      \"limitAxes\": \"773155237-dAxes\",\r\n      \"painfulness\": 0,\r\n      \"identityHash\": \"226871028-dKusudama\",\r\n      \"limitCones\": [\"1877416549-dLimitCone\"],\r\n      \"minAxialAngle\": 0.001,\r\n      \"attachedTo\": \"1494873913-dBone\",\r\n      \"axialRange\": 0.002,\r\n      \"axiallyConstrained\": true,\r\n      \"orientationallyConstrained\": true\r\n    },\r\n    {\r\n      \"limitAxes\": \"1920826138-dAxes\",\r\n      \"painfulness\": 0,\r\n      \"identityHash\": \"1444198203-dKusudama\",\r\n      \"limitCones\": [\r\n        \"1389899038-dLimitCone\",\r\n        \"820160438-dLimitCone\"\r\n      ],\r\n      \"minAxialAngle\": -2.7,\r\n      \"attachedTo\": \"1652914198-dBone\",\r\n      \"axialRange\": 2.7,\r\n      \"axiallyConstrained\": true,\r\n      \"orientationallyConstrained\": true\r\n    },\r\n    {\r\n      \"limitAxes\": \"1081076715-dAxes\",\r\n      \"painfulness\": 0,\r\n      \"identityHash\": \"1272098483-dKusudama\",\r\n      \"limitCones\": [\"635672874-dLimitCone\"],\r\n      \"minAxialAngle\": -0.17453292519943295,\r\n      \"attachedTo\": \"922314580-dBone\",\r\n      \"axialRange\": 0.3490658503988659,\r\n      \"axiallyConstrained\": true,\r\n      \"orientationallyConstrained\": true\r\n    },\r\n    {\r\n      \"limitAxes\": \"2012160658-dAxes\",\r\n      \"painfulness\": 0,\r\n      \"identityHash\": \"761126637-dKusudama\",\r\n      \"limitCones\": [\"389529261-dLimitCone\"],\r\n      \"minAxialAngle\": -0.17453292519943295,\r\n      \"attachedTo\": \"871240088-dBone\",\r\n      \"axialRange\": 0.3490658503988659,\r\n      \"axiallyConstrained\": true,\r\n      \"orientationallyConstrained\": true\r\n    },\r\n    {\r\n      \"limitAxes\": \"1743002405-dAxes\",\r\n      \"painfulness\": 0.05,\r\n      \"identityHash\": \"954601849-dKusudama\",\r\n      \"limitCones\": [\r\n        \"97932230-dLimitCone\",\r\n        \"2110218578-dLimitCone\"\r\n      ],\r\n      \"minAxialAngle\": -0.3,\r\n      \"attachedTo\": \"1249376407-dBone\",\r\n      \"axialRange\": 1.7,\r\n      \"axiallyConstrained\": true,\r\n      \"orientationallyConstrained\": true\r\n    },\r\n    {\r\n      \"limitAxes\": \"130834196-dAxes\",\r\n      \"painfulness\": 0,\r\n      \"identityHash\": \"867208277-dKusudama\",\r\n      \"limitCones\": [\r\n        \"1441634814-dLimitCone\",\r\n        \"1341580261-dLimitCone\"\r\n      ],\r\n      \"minAxialAngle\": 0.01,\r\n      \"attachedTo\": \"1757452533-dBone\",\r\n      \"axialRange\": 0.02,\r\n      \"axiallyConstrained\": true,\r\n      \"orientationallyConstrained\": true\r\n    },\r\n    {\r\n      \"limitAxes\": \"2072328717-dAxes\",\r\n      \"painfulness\": 0,\r\n      \"identityHash\": \"1270400049-dKusudama\",\r\n      \"limitCones\": [\r\n        \"1565262534-dLimitCone\",\r\n        \"1020071880-dLimitCone\"\r\n      ],\r\n      \"minAxialAngle\": -0,\r\n      \"attachedTo\": \"1415310832-dBone\",\r\n      \"axialRange\": 2.7,\r\n      \"axiallyConstrained\": true,\r\n      \"orientationallyConstrained\": true\r\n    },\r\n    {\r\n      \"limitAxes\": \"1259281785-dAxes\",\r\n      \"painfulness\": 0,\r\n      \"identityHash\": \"1642226240-dKusudama\",\r\n      \"limitCones\": [\"236668033-dLimitCone\"],\r\n      \"minAxialAngle\": -0.17453292519943295,\r\n      \"attachedTo\": \"1564213627-dBone\",\r\n      \"axialRange\": 0.3490658503988659,\r\n      \"axiallyConstrained\": true,\r\n      \"orientationallyConstrained\": true\r\n    },\r\n    {\r\n      \"limitAxes\": \"1339194081-dAxes\",\r\n      \"painfulness\": 0,\r\n      \"identityHash\": \"368943522-dKusudama\",\r\n      \"limitCones\": [\r\n        \"615875851-dLimitCone\",\r\n        \"87763950-dLimitCone\"\r\n      ],\r\n      \"minAxialAngle\": -0.01,\r\n      \"attachedTo\": \"523988834-dBone\",\r\n      \"axialRange\": 0.02,\r\n      \"axiallyConstrained\": true,\r\n      \"orientationallyConstrained\": true\r\n    },\r\n    {\r\n      \"limitAxes\": \"1352012899-dAxes\",\r\n      \"painfulness\": 0.1,\r\n      \"identityHash\": \"1150185190-dKusudama\",\r\n      \"limitCones\": [\"1084229150-dLimitCone\"],\r\n      \"minAxialAngle\": -0.7,\r\n      \"attachedTo\": \"2050266797-dBone\",\r\n      \"axialRange\": 1,\r\n      \"axiallyConstrained\": true,\r\n      \"orientationallyConstrained\": true\r\n    },\r\n    {\r\n      \"limitAxes\": \"1856278370-dAxes\",\r\n      \"painfulness\": 0.05,\r\n      \"identityHash\": \"550210541-dKusudama\",\r\n      \"limitCones\": [\r\n        \"955769212-dLimitCone\",\r\n        \"1682950615-dLimitCone\"\r\n      ],\r\n      \"minAxialAngle\": -1.7,\r\n      \"attachedTo\": \"1603242724-dBone\",\r\n      \"axialRange\": 1.7,\r\n      \"axiallyConstrained\": true,\r\n      \"orientationallyConstrained\": true\r\n    }\r\n  ],\r\n  \"bones\": [\r\n    {\r\n      \"localAxes\": \"2113374204-dAxes\",\r\n      \"identityHash\": \"492889448-dBone\",\r\n      \"majorRotationAxes\": \"1732297837-dAxes\",\r\n      \"children\": [\"383757870-dBone\"],\r\n      \"parentArmature\": \"1232661264-dArmature\",\r\n      \"boneHeight\": 10,\r\n      \"tag\": \"c4\",\r\n      \"stiffness\": 0,\r\n      \"constraints\": \"524285115-dKusudama\"\r\n    },\r\n    {\r\n      \"localAxes\": \"1363136220-dAxes\",\r\n      \"identityHash\": \"871240088-dBone\",\r\n      \"majorRotationAxes\": \"2012160658-dAxes\",\r\n      \"children\": [],\r\n      \"parentArmature\": \"1232661264-dArmature\",\r\n      \"boneHeight\": 15,\r\n      \"IKPin\": \"79477998-dIKPin\",\r\n      \"tag\": \"head\",\r\n      \"stiffness\": 0,\r\n      \"constraints\": \"761126637-dKusudama\"\r\n    },\r\n    {\r\n      \"localAxes\": \"1449454619-dAxes\",\r\n      \"identityHash\": \"523988834-dBone\",\r\n      \"majorRotationAxes\": \"1339194081-dAxes\",\r\n      \"children\": [],\r\n      \"parentArmature\": \"1232661264-dArmature\",\r\n      \"boneHeight\": 10,\r\n      \"IKPin\": \"241012923-dIKPin\",\r\n      \"tag\": \"right hand\",\r\n      \"stiffness\": 0,\r\n      \"constraints\": \"368943522-dKusudama\"\r\n    },\r\n    {\r\n      \"localAxes\": \"900326607-dAxes\",\r\n      \"identityHash\": \"1494873913-dBone\",\r\n      \"majorRotationAxes\": \"773155237-dAxes\",\r\n      \"children\": [\"2053282363-dBone\"],\r\n      \"parentArmature\": \"1232661264-dArmature\",\r\n      \"boneHeight\": 12,\r\n      \"tag\": \"neck 1\",\r\n      \"stiffness\": 0,\r\n      \"constraints\": \"226871028-dKusudama\"\r\n    },\r\n    {\r\n      \"localAxes\": \"352850808-dAxes\",\r\n      \"identityHash\": \"1564213627-dBone\",\r\n      \"majorRotationAxes\": \"1259281785-dAxes\",\r\n      \"children\": [\"922314580-dBone\"],\r\n      \"parentArmature\": \"1232661264-dArmature\",\r\n      \"boneHeight\": 10,\r\n      \"tag\": \"c1\",\r\n      \"stiffness\": 0,\r\n      \"constraints\": \"1642226240-dKusudama\"\r\n    },\r\n    {\r\n      \"localAxes\": \"1404698504-dAxes\",\r\n      \"identityHash\": \"1652914198-dBone\",\r\n      \"majorRotationAxes\": \"1920826138-dAxes\",\r\n      \"children\": [\"523988834-dBone\"],\r\n      \"parentArmature\": \"1232661264-dArmature\",\r\n      \"boneHeight\": 40,\r\n      \"tag\": \"right lower arm\",\r\n      \"stiffness\": 0,\r\n      \"constraints\": \"1444198203-dKusudama\"\r\n    },\r\n    {\r\n      \"localAxes\": \"24316821-dAxes\",\r\n      \"identityHash\": \"2011832440-dBone\",\r\n      \"majorRotationAxes\": \"525443737-dAxes\",\r\n      \"children\": [\"1603242724-dBone\"],\r\n      \"parentArmature\": \"1232661264-dArmature\",\r\n      \"boneHeight\": 15,\r\n      \"tag\": \"right collar bone\",\r\n      \"stiffness\": 0,\r\n      \"constraints\": \"56250132-dKusudama\"\r\n    },\r\n    {\r\n      \"localAxes\": \"279022475-dAxes\",\r\n      \"identityHash\": \"1415310832-dBone\",\r\n      \"majorRotationAxes\": \"2072328717-dAxes\",\r\n      \"children\": [\"1757452533-dBone\"],\r\n      \"parentArmature\": \"1232661264-dArmature\",\r\n      \"boneHeight\": 40,\r\n      \"tag\": \"right lower arm\",\r\n      \"stiffness\": 0,\r\n      \"constraints\": \"1270400049-dKusudama\"\r\n    },\r\n    {\r\n      \"localAxes\": \"271999809-dAxes\",\r\n      \"identityHash\": \"2053282363-dBone\",\r\n      \"majorRotationAxes\": \"228212540-dAxes\",\r\n      \"children\": [\"871240088-dBone\"],\r\n      \"parentArmature\": \"1232661264-dArmature\",\r\n      \"boneHeight\": 12,\r\n      \"tag\": \"neck 2\",\r\n      \"stiffness\": 0,\r\n      \"constraints\": \"1302819278-dKusudama\"\r\n    },\r\n    {\r\n      \"localAxes\": \"260457115-dAxes\",\r\n      \"identityHash\": \"1603242724-dBone\",\r\n      \"majorRotationAxes\": \"1856278370-dAxes\",\r\n      \"children\": [\"1652914198-dBone\"],\r\n      \"parentArmature\": \"1232661264-dArmature\",\r\n      \"boneHeight\": 40,\r\n      \"tag\": \"right upper arm\",\r\n      \"stiffness\": 0,\r\n      \"constraints\": \"550210541-dKusudama\"\r\n    },\r\n    {\r\n      \"localAxes\": \"41334380-dAxes\",\r\n      \"identityHash\": \"1757452533-dBone\",\r\n      \"majorRotationAxes\": \"130834196-dAxes\",\r\n      \"children\": [],\r\n      \"parentArmature\": \"1232661264-dArmature\",\r\n      \"boneHeight\": 10,\r\n      \"IKPin\": \"1377201857-dIKPin\",\r\n      \"tag\": \"left hand\",\r\n      \"stiffness\": 0,\r\n      \"constraints\": \"867208277-dKusudama\"\r\n    },\r\n    {\r\n      \"localAxes\": \"342240144-dAxes\",\r\n      \"identityHash\": \"1755714835-dBone\",\r\n      \"majorRotationAxes\": \"549115539-dAxes\",\r\n      \"children\": [\"492889448-dBone\"],\r\n      \"parentArmature\": \"1232661264-dArmature\",\r\n      \"boneHeight\": 10,\r\n      \"tag\": \"c3\",\r\n      \"stiffness\": 0,\r\n      \"constraints\": \"1707386078-dKusudama\"\r\n    },\r\n    {\r\n      \"localAxes\": \"1521795104-dAxes\",\r\n      \"identityHash\": \"1249376407-dBone\",\r\n      \"majorRotationAxes\": \"1743002405-dAxes\",\r\n      \"children\": [\"1415310832-dBone\"],\r\n      \"parentArmature\": \"1232661264-dArmature\",\r\n      \"boneHeight\": 40,\r\n      \"tag\": \"left upper arm\",\r\n      \"stiffness\": 0,\r\n      \"constraints\": \"954601849-dKusudama\"\r\n    },\r\n    {\r\n      \"localAxes\": \"650769958-dAxes\",\r\n      \"identityHash\": \"39460173-dBone\",\r\n      \"majorRotationAxes\": \"713939929-dAxes\",\r\n      \"children\": [\"1564213627-dBone\"],\r\n      \"parentArmature\": \"1232661264-dArmature\",\r\n      \"boneHeight\": 1,\r\n      \"IKPin\": \"1664157492-dIKPin\",\r\n      \"tag\": \"example : rootBone\",\r\n      \"stiffness\": 0\r\n    },\r\n    {\r\n      \"localAxes\": \"674351337-dAxes\",\r\n      \"identityHash\": \"383757870-dBone\",\r\n      \"majorRotationAxes\": \"893900186-dAxes\",\r\n      \"children\": [\r\n        \"1494873913-dBone\",\r\n        \"2011832440-dBone\",\r\n        \"2050266797-dBone\"\r\n      ],\r\n      \"parentArmature\": \"1232661264-dArmature\",\r\n      \"boneHeight\": 10,\r\n      \"tag\": \"c5\",\r\n      \"stiffness\": 0,\r\n      \"constraints\": \"478565887-dKusudama\"\r\n    },\r\n    {\r\n      \"localAxes\": \"1133041376-dAxes\",\r\n      \"identityHash\": \"2050266797-dBone\",\r\n      \"majorRotationAxes\": \"1352012899-dAxes\",\r\n      \"children\": [\"1249376407-dBone\"],\r\n      \"parentArmature\": \"1232661264-dArmature\",\r\n      \"boneHeight\": 15,\r\n      \"tag\": \"left collar bone\",\r\n      \"stiffness\": 0,\r\n      \"constraints\": \"1150185190-dKusudama\"\r\n    },\r\n    {\r\n      \"localAxes\": \"929385484-dAxes\",\r\n      \"identityHash\": \"922314580-dBone\",\r\n      \"majorRotationAxes\": \"1081076715-dAxes\",\r\n      \"children\": [\"1755714835-dBone\"],\r\n      \"parentArmature\": \"1232661264-dArmature\",\r\n      \"boneHeight\": 10,\r\n      \"tag\": \"c2\",\r\n      \"stiffness\": 0,\r\n      \"constraints\": \"1272098483-dKusudama\"\r\n    }\r\n  ],\r\n  \"limitCones\": [\r\n    {\r\n      \"identityHash\": \"389529261-dLimitCone\",\r\n      \"parentKusudama\": \"761126637-dKusudama\",\r\n      \"radius\": 0.6981317007977318,\r\n      \"controlPoint\": {\"vec\": [\r\n        -9.860761315262639E-32,\r\n        1,\r\n        -3.8857805861880444E-16\r\n      ]}\r\n    },\r\n    {\r\n      \"identityHash\": \"1389899038-dLimitCone\",\r\n      \"parentKusudama\": \"1444198203-dKusudama\",\r\n      \"radius\": 0.025,\r\n      \"controlPoint\": {\"vec\": [\r\n        -3.6386705028785315E-16,\r\n        0.09950371902099961,\r\n        0.9950371902099892\r\n      ]}\r\n    },\r\n    {\r\n      \"identityHash\": \"1441634814-dLimitCone\",\r\n      \"parentKusudama\": \"867208277-dKusudama\",\r\n      \"radius\": 0.7853981633974483,\r\n      \"controlPoint\": {\"vec\": [\r\n        7.610449107566285E-16,\r\n        0.7071067811865479,\r\n        -0.7071067811865472\r\n      ]}\r\n    },\r\n    {\r\n      \"identityHash\": \"1682950615-dLimitCone\",\r\n      \"parentKusudama\": \"550210541-dKusudama\",\r\n      \"radius\": 1,\r\n      \"controlPoint\": {\"vec\": [\r\n        -0.02323227222649205,\r\n        0.9996626065373221,\r\n        -0.011616136113248078\r\n      ]}\r\n    },\r\n    {\r\n      \"identityHash\": \"599313328-dLimitCone\",\r\n      \"parentKusudama\": \"524285115-dKusudama\",\r\n      \"radius\": 0.17453292519943295,\r\n      \"controlPoint\": {\"vec\": [\r\n        -3.204747427460358E-31,\r\n        1,\r\n        -3.8857805861880444E-16\r\n      ]}\r\n    },\r\n    {\r\n      \"identityHash\": \"1341580261-dLimitCone\",\r\n      \"parentKusudama\": \"867208277-dKusudama\",\r\n      \"radius\": 0.7853981633974483,\r\n      \"controlPoint\": {\"vec\": [\r\n        7.703962123969555E-16,\r\n        0.7071067811865501,\r\n        0.707106781186545\r\n      ]}\r\n    },\r\n    {\r\n      \"identityHash\": \"236668033-dLimitCone\",\r\n      \"parentKusudama\": \"1642226240-dKusudama\",\r\n      \"radius\": 0.17453292519943295,\r\n      \"controlPoint\": {\"vec\": [\r\n        3.2047474274603688E-31,\r\n        1,\r\n        4.163336342344348E-16\r\n      ]}\r\n    },\r\n    {\r\n      \"identityHash\": \"67417462-dLimitCone\",\r\n      \"parentKusudama\": \"1302819278-dKusudama\",\r\n      \"radius\": 0.17453292519943295,\r\n      \"controlPoint\": {\"vec\": [\r\n        7.395570986446992E-32,\r\n        1,\r\n        -8.326672684688681E-17\r\n      ]}\r\n    },\r\n    {\r\n      \"identityHash\": \"2011998365-dLimitCone\",\r\n      \"parentKusudama\": \"56250132-dKusudama\",\r\n      \"radius\": 0.7,\r\n      \"controlPoint\": {\"vec\": [\r\n        0,\r\n        1,\r\n        -2.498001805406602E-16\r\n      ]}\r\n    },\r\n    {\r\n      \"identityHash\": \"635672874-dLimitCone\",\r\n      \"parentKusudama\": \"1272098483-dKusudama\",\r\n      \"radius\": 0.17453292519943295,\r\n      \"controlPoint\": {\"vec\": [\r\n        3.2047474274603688E-31,\r\n        1,\r\n        6.106226635438377E-16\r\n      ]}\r\n    },\r\n    {\r\n      \"identityHash\": \"955769212-dLimitCone\",\r\n      \"parentKusudama\": \"550210541-dKusudama\",\r\n      \"radius\": 1,\r\n      \"controlPoint\": {\"vec\": [\r\n        0.023232272226494596,\r\n        0.999662606537322,\r\n        0.01161613611324641\r\n      ]}\r\n    },\r\n    {\r\n      \"identityHash\": \"1084229150-dLimitCone\",\r\n      \"parentKusudama\": \"1150185190-dKusudama\",\r\n      \"radius\": 0.7,\r\n      \"controlPoint\": {\"vec\": [\r\n        1.1102230246251565E-16,\r\n        1,\r\n        -2.7755575615628914E-16\r\n      ]}\r\n    },\r\n    {\r\n      \"identityHash\": \"87763950-dLimitCone\",\r\n      \"parentKusudama\": \"368943522-dKusudama\",\r\n      \"radius\": 0.7853981633974483,\r\n      \"controlPoint\": {\"vec\": [\r\n        -6.805940427860802E-16,\r\n        0.7071067811865501,\r\n        0.707106781186545\r\n      ]}\r\n    },\r\n    {\r\n      \"identityHash\": \"820160438-dLimitCone\",\r\n      \"parentKusudama\": \"1444198203-dKusudama\",\r\n      \"radius\": 0.025,\r\n      \"controlPoint\": {\"vec\": [\r\n        2.27883927640672E-16,\r\n        0.09950371902099872,\r\n        -0.9950371902099893\r\n      ]}\r\n    },\r\n    {\r\n      \"identityHash\": \"1020071880-dLimitCone\",\r\n      \"parentKusudama\": \"1270400049-dKusudama\",\r\n      \"radius\": 0.025,\r\n      \"controlPoint\": {\"vec\": [\r\n        -2.570142526189457E-16,\r\n        0.09950371902099872,\r\n        -0.9950371902099893\r\n      ]}\r\n    },\r\n    {\r\n      \"identityHash\": \"1565262534-dLimitCone\",\r\n      \"parentKusudama\": \"1270400049-dKusudama\",\r\n      \"radius\": 0.025,\r\n      \"controlPoint\": {\"vec\": [\r\n        3.705057752367159E-16,\r\n        0.09950371902099961,\r\n        0.9950371902099892\r\n      ]}\r\n    },\r\n    {\r\n      \"identityHash\": \"615875851-dLimitCone\",\r\n      \"parentKusudama\": \"368943522-dKusudama\",\r\n      \"radius\": 0.7853981633974483,\r\n      \"controlPoint\": {\"vec\": [\r\n        -6.966614289605233E-16,\r\n        0.7071067811865479,\r\n        -0.7071067811865472\r\n      ]}\r\n    },\r\n    {\r\n      \"identityHash\": \"348648077-dLimitCone\",\r\n      \"parentKusudama\": \"478565887-dKusudama\",\r\n      \"radius\": 0.17453292519943295,\r\n      \"controlPoint\": {\"vec\": [\r\n        7.395570986446992E-32,\r\n        1,\r\n        -8.326672684688681E-17\r\n      ]}\r\n    },\r\n    {\r\n      \"identityHash\": \"2110218578-dLimitCone\",\r\n      \"parentKusudama\": \"954601849-dKusudama\",\r\n      \"radius\": 1,\r\n      \"controlPoint\": {\"vec\": [\r\n        0.02323227222649237,\r\n        0.9996626065373221,\r\n        -0.011616136113246519\r\n      ]}\r\n    },\r\n    {\r\n      \"identityHash\": \"97932230-dLimitCone\",\r\n      \"parentKusudama\": \"954601849-dKusudama\",\r\n      \"radius\": 1,\r\n      \"controlPoint\": {\"vec\": [\r\n        -0.02323227222649328,\r\n        0.9996626065373221,\r\n        0.011616136113245919\r\n      ]}\r\n    },\r\n    {\r\n      \"identityHash\": \"1697899364-dLimitCone\",\r\n      \"parentKusudama\": \"1707386078-dKusudama\",\r\n      \"radius\": 0.17453292519943295,\r\n      \"controlPoint\": {\"vec\": [\r\n        7.395570986446979E-32,\r\n        1,\r\n        0\r\n      ]}\r\n    },\r\n    {\r\n      \"identityHash\": \"1877416549-dLimitCone\",\r\n      \"parentKusudama\": \"226871028-dKusudama\",\r\n      \"radius\": 0.01,\r\n      \"controlPoint\": {\"vec\": [\r\n        0,\r\n        1,\r\n        -2.220446049250313E-16\r\n      ]}\r\n    }\r\n  ],\r\n  \"axes\": [\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"650769958-dAxes\",\r\n      \"identityHash\": \"1259281785-dAxes\",\r\n      \"rotation\": [\r\n        1,\r\n        0,\r\n        0,\r\n        0\r\n      ],\r\n      \"translation\": [\r\n        0,\r\n        1,\r\n        0\r\n      ],\r\n      \"slipType\": 0\r\n    },\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"1133041376-dAxes\",\r\n      \"identityHash\": \"1521795104-dAxes\",\r\n      \"rotation\": [\r\n        -0.6796696327329125,\r\n        0.04473574096779429,\r\n        -0.21553623487598816,\r\n        0.6997085359463991\r\n      ],\r\n      \"translation\": [\r\n        -3.552713678800501E-15,\r\n        15,\r\n        0\r\n      ],\r\n      \"slipType\": 0\r\n    },\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"900326607-dAxes\",\r\n      \"identityHash\": \"271999809-dAxes\",\r\n      \"rotation\": [\r\n        -0.9965147414773756,\r\n        -9.355609474972343E-5,\r\n        -0.08341676028746486,\r\n        7.327127790570861E-5\r\n      ],\r\n      \"translation\": [\r\n        -7.888609052210118E-31,\r\n        12,\r\n        0\r\n      ],\r\n      \"slipType\": 0\r\n    },\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"900326607-dAxes\",\r\n      \"identityHash\": \"228212540-dAxes\",\r\n      \"rotation\": [\r\n        1,\r\n        0,\r\n        0,\r\n        0\r\n      ],\r\n      \"translation\": [\r\n        -7.888609052210118E-31,\r\n        12,\r\n        0\r\n      ],\r\n      \"slipType\": 0\r\n    },\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"1133041376-dAxes\",\r\n      \"identityHash\": \"1743002405-dAxes\",\r\n      \"rotation\": [\r\n        0.907491463000104,\r\n        -0.18786124910791588,\r\n        -2.3592239273284576E-16,\r\n        -0.37572249821583037\r\n      ],\r\n      \"translation\": [\r\n        -3.552713678800501E-15,\r\n        15,\r\n        0\r\n      ],\r\n      \"slipType\": 0\r\n    },\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"1682788987-dAxes\",\r\n      \"identityHash\": \"788886565-dAxes\",\r\n      \"rotation\": [\r\n        1,\r\n        -1.3769367590565903E-17,\r\n        1.0842021724855042E-19,\r\n        2.60208521396521E-18\r\n      ],\r\n      \"translation\": [\r\n        3.469446951953614E-16,\r\n        10,\r\n        6.8833827526759706E-15\r\n      ],\r\n      \"slipType\": 0\r\n    },\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"260457115-dAxes\",\r\n      \"identityHash\": \"1920826138-dAxes\",\r\n      \"rotation\": [\r\n        0.7071067811865475,\r\n        -0.7071067811865477,\r\n        -4.831708244813565E-16,\r\n        8.03370544323055E-18\r\n      ],\r\n      \"translation\": [\r\n        -3.108624468950438E-14,\r\n        40,\r\n        0\r\n      ],\r\n      \"slipType\": 0\r\n    },\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"1404698504-dAxes\",\r\n      \"identityHash\": \"1449454619-dAxes\",\r\n      \"rotation\": [\r\n        -0.9959236223967767,\r\n        0.026341409964858016,\r\n        0.004979659609216661,\r\n        0.08612474361832603\r\n      ],\r\n      \"translation\": [\r\n        0,\r\n        40,\r\n        0\r\n      ],\r\n      \"slipType\": 0\r\n    },\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"1747924262-dAxes\",\r\n      \"identityHash\": \"2010344120-dAxes\",\r\n      \"rotation\": [\r\n        -0.5069501724690944,\r\n        0.7812935983666331,\r\n        -0.18680277596098532,\r\n        -0.3125484901229628\r\n      ],\r\n      \"translation\": [\r\n        3.552713678800501E-15,\r\n        40.000000000000355,\r\n        3.552713678800501E-14\r\n      ],\r\n      \"slipType\": 0\r\n    },\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"1682788987-dAxes\",\r\n      \"identityHash\": \"1471192687-dAxes\",\r\n      \"rotation\": [\r\n        0.9999258699683283,\r\n        -0.005106854119570748,\r\n        -0.010515584791900685,\r\n        0.0034054493929001357\r\n      ],\r\n      \"translation\": [\r\n        9.159339953157541E-16,\r\n        10,\r\n        1.4876988529977098E-14\r\n      ],\r\n      \"slipType\": 0\r\n    },\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"1471192687-dAxes\",\r\n      \"identityHash\": \"1533744639-dAxes\",\r\n      \"rotation\": [\r\n        0.8280672304692729,\r\n        -1.5612511283791264E-16,\r\n        -1.3183898417423734E-16,\r\n        -0.5606288093051839\r\n      ],\r\n      \"translation\": [\r\n        3.7470027081099033E-16,\r\n        10,\r\n        7.993605777301127E-15\r\n      ],\r\n      \"slipType\": 0\r\n    },\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"24316821-dAxes\",\r\n      \"identityHash\": \"260457115-dAxes\",\r\n      \"rotation\": [\r\n        0.8424507306891859,\r\n        -0.060700467270859246,\r\n        -0.08429438624999284,\r\n        0.5286649941892249\r\n      ],\r\n      \"translation\": [\r\n        -1.7763568394002505E-15,\r\n        15,\r\n        -0\r\n      ],\r\n      \"slipType\": 0\r\n    },\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"279022475-dAxes\",\r\n      \"identityHash\": \"130834196-dAxes\",\r\n      \"rotation\": [\r\n        1,\r\n        0,\r\n        0,\r\n        0\r\n      ],\r\n      \"translation\": [\r\n        -2.6469779601696886E-23,\r\n        39.99999999999999,\r\n        0\r\n      ],\r\n      \"slipType\": 0\r\n    },\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"1696992278-dAxes\",\r\n      \"identityHash\": \"1699649608-dAxes\",\r\n      \"rotation\": [\r\n        0.9074914630001041,\r\n        -0.18786124910791585,\r\n        -2.498001805406602E-16,\r\n        -0.3757224982158303\r\n      ],\r\n      \"translation\": [\r\n        1.9539925233402755E-14,\r\n        15.000000000000014,\r\n        -5.773159728050814E-15\r\n      ],\r\n      \"slipType\": 0\r\n    },\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"352850808-dAxes\",\r\n      \"identityHash\": \"929385484-dAxes\",\r\n      \"rotation\": [\r\n        0.9998754304483968,\r\n        -1.0956750756941321E-6,\r\n        0.01578364467640718,\r\n        -1.2048310155282276E-5\r\n      ],\r\n      \"translation\": [\r\n        0,\r\n        10,\r\n        0\r\n      ],\r\n      \"slipType\": 0\r\n    },\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"347763103-dAxes\",\r\n      \"identityHash\": \"1682788987-dAxes\",\r\n      \"rotation\": [\r\n        0.9962007053770017,\r\n        -2.9600830948680267E-5,\r\n        -0.08708703864590614,\r\n        3.781589026092755E-5\r\n      ],\r\n      \"translation\": [\r\n        1.8041124150158794E-15,\r\n        10.000000000000007,\r\n        1.3100631690576847E-14\r\n      ],\r\n      \"slipType\": 0\r\n    },\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"674351337-dAxes\",\r\n      \"identityHash\": \"525443737-dAxes\",\r\n      \"rotation\": [\r\n        0.828067230469273,\r\n        -1.8041124150158794E-16,\r\n        1.3877787807814457E-16,\r\n        0.5606288093051839\r\n      ],\r\n      \"translation\": [\r\n        0,\r\n        10,\r\n        0\r\n      ],\r\n      \"slipType\": 0\r\n    },\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"1749349751-dAxes\",\r\n      \"identityHash\": \"1335732807-dAxes\",\r\n      \"rotation\": [\r\n        0.7071067811865477,\r\n        -0.7071067811865475,\r\n        1.5612565962275227E-9,\r\n        1.5612528492248146E-9\r\n      ],\r\n      \"translation\": [\r\n        -20.359097491403496,\r\n        -2.7778058177093703,\r\n        -8.65586335392165\r\n      ],\r\n      \"slipType\": 0\r\n    },\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"260457115-dAxes\",\r\n      \"identityHash\": \"1404698504-dAxes\",\r\n      \"rotation\": [\r\n        -0.5069501724690944,\r\n        0.7812935983666331,\r\n        -0.18680277596098532,\r\n        -0.3125484901229628\r\n      ],\r\n      \"translation\": [\r\n        -3.108624468950438E-14,\r\n        40,\r\n        0\r\n      ],\r\n      \"slipType\": 0\r\n    },\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"674351337-dAxes\",\r\n      \"identityHash\": \"1352012899-dAxes\",\r\n      \"rotation\": [\r\n        0.828067230469273,\r\n        -1.5265566588595902E-16,\r\n        -1.249000902703301E-16,\r\n        -0.5606288093051839\r\n      ],\r\n      \"translation\": [\r\n        0,\r\n        10,\r\n        0\r\n      ],\r\n      \"slipType\": 0\r\n    },\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"-1\",\r\n      \"identityHash\": \"708862917-dAxes\",\r\n      \"rotation\": [\r\n        0.7110234997445816,\r\n        0.06220649572817743,\r\n        -0.6977459848089927,\r\n        0.06104486369152165\r\n      ],\r\n      \"translation\": [\r\n        0,\r\n        50,\r\n        0\r\n      ],\r\n      \"slipType\": 0\r\n    },\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"1690105082-dAxes\",\r\n      \"identityHash\": \"660298482-dAxes\",\r\n      \"rotation\": [\r\n        0.9074914630001039,\r\n        -0.18786124910791596,\r\n        2.289834988289386E-16,\r\n        0.3757224982158306\r\n      ],\r\n      \"translation\": [\r\n        8.881784197001252E-15,\r\n        15.000000000000021,\r\n        1.021405182655144E-14\r\n      ],\r\n      \"slipType\": 0\r\n    },\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"708862917-dAxes\",\r\n      \"identityHash\": \"1776900385-dAxes\",\r\n      \"rotation\": [\r\n        6.123233995736766E-17,\r\n        0,\r\n        0,\r\n        -1\r\n      ],\r\n      \"translation\": [\r\n        0,\r\n        0,\r\n        0\r\n      ],\r\n      \"slipType\": 0\r\n    },\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"2010344120-dAxes\",\r\n      \"identityHash\": \"1497289496-dAxes\",\r\n      \"rotation\": [\r\n        -0.9959236223967767,\r\n        0.026341409964858016,\r\n        0.004979659609216661,\r\n        0.08612474361832603\r\n      ],\r\n      \"translation\": [\r\n        2.0605739337042905E-13,\r\n        40.00000000000051,\r\n        1.8474111129762605E-13\r\n      ],\r\n      \"slipType\": 0\r\n    },\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"1853773922-dAxes\",\r\n      \"identityHash\": \"1760489914-dAxes\",\r\n      \"rotation\": [\r\n        1,\r\n        0,\r\n        0,\r\n        0\r\n      ],\r\n      \"translation\": [\r\n        5.689893001203927E-16,\r\n        12,\r\n        1.1546319456101628E-14\r\n      ],\r\n      \"slipType\": 0\r\n    },\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"1521795104-dAxes\",\r\n      \"identityHash\": \"2072328717-dAxes\",\r\n      \"rotation\": [\r\n        0.7071067811865475,\r\n        -0.7071067811865477,\r\n        4.0325440390164095E-16,\r\n        4.6756374818778E-18\r\n      ],\r\n      \"translation\": [\r\n        2.220446046603335E-14,\r\n        40,\r\n        0\r\n      ],\r\n      \"slipType\": 0\r\n    },\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"1345137488-dAxes\",\r\n      \"identityHash\": \"347763103-dAxes\",\r\n      \"rotation\": [\r\n        0.9995581275908106,\r\n        -1.1244868932327663E-5,\r\n        -0.029724545752548397,\r\n        2.8644550613713883E-5\r\n      ],\r\n      \"translation\": [\r\n        2.6645352591003757E-15,\r\n        10,\r\n        1.887379141862766E-14\r\n      ],\r\n      \"slipType\": 0\r\n    },\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"2010344120-dAxes\",\r\n      \"identityHash\": \"1512499169-dAxes\",\r\n      \"rotation\": [\r\n        1,\r\n        -6.938893903907227E-18,\r\n        2.7755575615628907E-17,\r\n        2.7755575615628907E-17\r\n      ],\r\n      \"translation\": [\r\n        9.947598300641403E-14,\r\n        40.0000000000003,\r\n        1.0658141036401503E-13\r\n      ],\r\n      \"slipType\": 0\r\n    },\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"1471192687-dAxes\",\r\n      \"identityHash\": \"1054999598-dAxes\",\r\n      \"rotation\": [\r\n        1,\r\n        -5.421010862427521E-20,\r\n        -1.0842021724855042E-19,\r\n        -8.673617379884034E-19\r\n      ],\r\n      \"translation\": [\r\n        3.7470027081099033E-16,\r\n        10,\r\n        7.993605777301127E-15\r\n      ],\r\n      \"slipType\": 0\r\n    },\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"674351337-dAxes\",\r\n      \"identityHash\": \"773155237-dAxes\",\r\n      \"rotation\": [\r\n        1,\r\n        0,\r\n        0,\r\n        0\r\n      ],\r\n      \"translation\": [\r\n        0,\r\n        10,\r\n        0\r\n      ],\r\n      \"slipType\": 0\r\n    },\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"929385484-dAxes\",\r\n      \"identityHash\": \"342240144-dAxes\",\r\n      \"rotation\": [\r\n        0.9995581275908106,\r\n        -1.1244868932327663E-5,\r\n        -0.029724545752548397,\r\n        2.8644550613713883E-5\r\n      ],\r\n      \"translation\": [\r\n        1.9721522630525295E-31,\r\n        10,\r\n        0\r\n      ],\r\n      \"slipType\": 0\r\n    },\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"674351337-dAxes\",\r\n      \"identityHash\": \"900326607-dAxes\",\r\n      \"rotation\": [\r\n        0.9999871981982843,\r\n        0.004103257040058261,\r\n        -7.76947796188421E-4,\r\n        -0.0028571092612275466\r\n      ],\r\n      \"translation\": [\r\n        0,\r\n        10,\r\n        0\r\n      ],\r\n      \"slipType\": 0\r\n    },\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"1776900385-dAxes\",\r\n      \"identityHash\": \"1551208021-dAxes\",\r\n      \"rotation\": [\r\n        1,\r\n        1.734723475976807E-17,\r\n        1.951563910473908E-18,\r\n        0\r\n      ],\r\n      \"translation\": [\r\n        -0.19034311514467817,\r\n        -0.43769442175178375,\r\n        -0.8716934175587369\r\n      ],\r\n      \"slipType\": 0\r\n    },\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"2113374204-dAxes\",\r\n      \"identityHash\": \"893900186-dAxes\",\r\n      \"rotation\": [\r\n        1,\r\n        0,\r\n        0,\r\n        0\r\n      ],\r\n      \"translation\": [\r\n        0,\r\n        10,\r\n        0\r\n      ],\r\n      \"slipType\": 0\r\n    },\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"1482313974-dAxes\",\r\n      \"identityHash\": \"316463319-dAxes\",\r\n      \"rotation\": [\r\n        1,\r\n        1.734723475976807E-18,\r\n        2.7755575615628914E-17,\r\n        -1.3877787807814457E-17\r\n      ],\r\n      \"translation\": [\r\n        -4.973799150320701E-14,\r\n        40.00000000000025,\r\n        -1.4210854715202004E-14\r\n      ],\r\n      \"slipType\": 0\r\n    },\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"1471192687-dAxes\",\r\n      \"identityHash\": \"1690105082-dAxes\",\r\n      \"rotation\": [\r\n        -0.8238423081549469,\r\n        0.0563478160127782,\r\n        0.08261378923653265,\r\n        -0.5579280748918279\r\n      ],\r\n      \"translation\": [\r\n        2.3592239273284576E-16,\r\n        10,\r\n        1.1546319456101628E-14\r\n      ],\r\n      \"slipType\": 0\r\n    },\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"623575659-dAxes\",\r\n      \"identityHash\": \"1863952573-dAxes\",\r\n      \"rotation\": [\r\n        0.7071067811865475,\r\n        -0.7071067811865478,\r\n        4.0939474033052647E-16,\r\n        2.7755575615628914E-17\r\n      ],\r\n      \"translation\": [\r\n        5.3290705182007514E-14,\r\n        40.00000000000034,\r\n        1.7763568394002505E-14\r\n      ],\r\n      \"slipType\": 0\r\n    },\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"1551208021-dAxes\",\r\n      \"identityHash\": \"1677330051-dAxes\",\r\n      \"rotation\": [\r\n        0.9999808135790605,\r\n        -0.004980483297717656,\r\n        -0.0036608197535983747,\r\n        4.0701180951872515E-4\r\n      ],\r\n      \"translation\": [\r\n        2.7755575615628914E-17,\r\n        0.9999999999999977,\r\n        3.608224830031759E-16\r\n      ],\r\n      \"slipType\": 0\r\n    },\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"1521795104-dAxes\",\r\n      \"identityHash\": \"279022475-dAxes\",\r\n      \"rotation\": [\r\n        0.4271651771009742,\r\n        -0.9003741115187024,\r\n        -0.02375184565126196,\r\n        -0.07932351862694628\r\n      ],\r\n      \"translation\": [\r\n        2.220446046603335E-14,\r\n        40,\r\n        0\r\n      ],\r\n      \"slipType\": 0\r\n    },\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"1471192687-dAxes\",\r\n      \"identityHash\": \"139651858-dAxes\",\r\n      \"rotation\": [\r\n        0.8280672304692729,\r\n        -1.700029006457271E-16,\r\n        1.3183898417423734E-16,\r\n        0.5606288093051838\r\n      ],\r\n      \"translation\": [\r\n        3.7470027081099033E-16,\r\n        10,\r\n        7.993605777301127E-15\r\n      ],\r\n      \"slipType\": 0\r\n    },\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"1471192687-dAxes\",\r\n      \"identityHash\": \"1853773922-dAxes\",\r\n      \"rotation\": [\r\n        0.9999871981982843,\r\n        0.004103257040058261,\r\n        -7.76947796188421E-4,\r\n        -0.0028571092612275466\r\n      ],\r\n      \"translation\": [\r\n        2.3592239273284576E-16,\r\n        10,\r\n        1.1546319456101628E-14\r\n      ],\r\n      \"slipType\": 0\r\n    },\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"708862917-dAxes\",\r\n      \"identityHash\": \"1615751886-dAxes\",\r\n      \"rotation\": [\r\n        -6.123233995736759E-17,\r\n        0,\r\n        0,\r\n        1\r\n      ],\r\n      \"translation\": [\r\n        -9.184850993605146E-15,\r\n        -75,\r\n        -1.7763568394002505E-15\r\n      ],\r\n      \"slipType\": 0\r\n    },\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"623575659-dAxes\",\r\n      \"identityHash\": \"1482313974-dAxes\",\r\n      \"rotation\": [\r\n        0.4271651771009742,\r\n        -0.9003741115187024,\r\n        -0.02375184565126196,\r\n        -0.07932351862694628\r\n      ],\r\n      \"translation\": [\r\n        7.105427357601002E-14,\r\n        40.000000000000654,\r\n        1.7763568394002505E-14\r\n      ],\r\n      \"slipType\": 0\r\n    },\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"929385484-dAxes\",\r\n      \"identityHash\": \"549115539-dAxes\",\r\n      \"rotation\": [\r\n        1,\r\n        0,\r\n        0,\r\n        0\r\n      ],\r\n      \"translation\": [\r\n        1.9721522630525295E-31,\r\n        10,\r\n        0\r\n      ],\r\n      \"slipType\": 0\r\n    },\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"2113374204-dAxes\",\r\n      \"identityHash\": \"674351337-dAxes\",\r\n      \"rotation\": [\r\n        0.9999258699683283,\r\n        -0.005106854119570748,\r\n        -0.010515584791900685,\r\n        0.0034054493929001357\r\n      ],\r\n      \"translation\": [\r\n        0,\r\n        10,\r\n        0\r\n      ],\r\n      \"slipType\": 0\r\n    },\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"1749349751-dAxes\",\r\n      \"identityHash\": \"1718264580-dAxes\",\r\n      \"rotation\": [\r\n        -0.7048690597423345,\r\n        0.704869059494115,\r\n        0.0562103991080088,\r\n        -0.05621039599538079\r\n      ],\r\n      \"translation\": [\r\n        20.949192806494892,\r\n        -2.880480916961303,\r\n        -10.043308633698919\r\n      ],\r\n      \"slipType\": 0\r\n    },\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"1776900385-dAxes\",\r\n      \"identityHash\": \"650769958-dAxes\",\r\n      \"rotation\": [\r\n        -1,\r\n        -1.431146867680866E-17,\r\n        -4.3368086899420177E-19,\r\n        -1.734723475976807E-18\r\n      ],\r\n      \"translation\": [\r\n        -0.1903431151446781,\r\n        -0.43769442175178375,\r\n        -0.8716934175587366\r\n      ],\r\n      \"slipType\": 0\r\n    },\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"708862917-dAxes\",\r\n      \"identityHash\": \"2003605892-dAxes\",\r\n      \"rotation\": [\r\n        -6.123233995736767E-17,\r\n        0,\r\n        0,\r\n        1\r\n      ],\r\n      \"translation\": [\r\n        0.19034311514467828,\r\n        0.43769442175178264,\r\n        -0.8716934175587373\r\n      ],\r\n      \"slipType\": 0\r\n    },\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"1776900385-dAxes\",\r\n      \"identityHash\": \"713939929-dAxes\",\r\n      \"rotation\": [\r\n        -1,\r\n        0,\r\n        0,\r\n        0\r\n      ],\r\n      \"translation\": [\r\n        0,\r\n        0,\r\n        0\r\n      ],\r\n      \"slipType\": 0\r\n    },\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"352850808-dAxes\",\r\n      \"identityHash\": \"1081076715-dAxes\",\r\n      \"rotation\": [\r\n        1,\r\n        0,\r\n        0,\r\n        0\r\n      ],\r\n      \"translation\": [\r\n        0,\r\n        10,\r\n        0\r\n      ],\r\n      \"slipType\": 0\r\n    },\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"674351337-dAxes\",\r\n      \"identityHash\": \"24316821-dAxes\",\r\n      \"rotation\": [\r\n        -0.8238423081549469,\r\n        0.0563478160127782,\r\n        0.08261378923653265,\r\n        -0.5579280748918279\r\n      ],\r\n      \"translation\": [\r\n        0,\r\n        10,\r\n        0\r\n      ],\r\n      \"slipType\": 0\r\n    },\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"1776900385-dAxes\",\r\n      \"identityHash\": \"1296389601-dAxes\",\r\n      \"rotation\": [\r\n        1,\r\n        0,\r\n        0,\r\n        0\r\n      ],\r\n      \"translation\": [\r\n        -3.5915327443603795E-16,\r\n        -5.398069740840723E-16,\r\n        -3.110690516659518E-15\r\n      ],\r\n      \"slipType\": 0\r\n    },\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"24316821-dAxes\",\r\n      \"identityHash\": \"1856278370-dAxes\",\r\n      \"rotation\": [\r\n        0.907491463000104,\r\n        -0.1878612491079159,\r\n        1.942890293094024E-16,\r\n        0.3757224982158304\r\n      ],\r\n      \"translation\": [\r\n        -1.7763568394002505E-15,\r\n        15,\r\n        -0\r\n      ],\r\n      \"slipType\": 0\r\n    },\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"1677330051-dAxes\",\r\n      \"identityHash\": \"530649753-dAxes\",\r\n      \"rotation\": [\r\n        1,\r\n        2.7755575615628914E-17,\r\n        2.1684043449710089E-19,\r\n        -5.204170427930421E-18\r\n      ],\r\n      \"translation\": [\r\n        6.106226635438361E-16,\r\n        9.999999999999996,\r\n        4.218847493575595E-15\r\n      ],\r\n      \"slipType\": 0\r\n    },\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"1853773922-dAxes\",\r\n      \"identityHash\": \"697297595-dAxes\",\r\n      \"rotation\": [\r\n        -0.9965147414773756,\r\n        -9.355609474972343E-5,\r\n        -0.08341676028746486,\r\n        7.327127790570861E-5\r\n      ],\r\n      \"translation\": [\r\n        4.996003610813204E-16,\r\n        12,\r\n        1.509903313490213E-14\r\n      ],\r\n      \"slipType\": 0\r\n    },\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"347763103-dAxes\",\r\n      \"identityHash\": \"234585400-dAxes\",\r\n      \"rotation\": [\r\n        1,\r\n        0,\r\n        -5.572799166575492E-17,\r\n        0\r\n      ],\r\n      \"translation\": [\r\n        1.6653345369377348E-15,\r\n        10.000000000000002,\r\n        7.993605777301127E-15\r\n      ],\r\n      \"slipType\": 0\r\n    },\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"697297595-dAxes\",\r\n      \"identityHash\": \"1959725577-dAxes\",\r\n      \"rotation\": [\r\n        1,\r\n        0,\r\n        0,\r\n        0\r\n      ],\r\n      \"translation\": [\r\n        1.609823385706477E-15,\r\n        12.000000000000005,\r\n        1.1102230246251565E-14\r\n      ],\r\n      \"slipType\": 0\r\n    },\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"708862917-dAxes\",\r\n      \"identityHash\": \"1749349751-dAxes\",\r\n      \"rotation\": [\r\n        -1,\r\n        0,\r\n        0,\r\n        0\r\n      ],\r\n      \"translation\": [\r\n        -13.020305899795389,\r\n        -24.729616491557266,\r\n        30.99349710918543\r\n      ],\r\n      \"slipType\": 0\r\n    },\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"674351337-dAxes\",\r\n      \"identityHash\": \"1133041376-dAxes\",\r\n      \"rotation\": [\r\n        -0.8239303434471652,\r\n        0.055969489503578614,\r\n        -0.08266878083102493,\r\n        0.557828000433518\r\n      ],\r\n      \"translation\": [\r\n        0,\r\n        10,\r\n        0\r\n      ],\r\n      \"slipType\": 0\r\n    },\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"1690105082-dAxes\",\r\n      \"identityHash\": \"1747924262-dAxes\",\r\n      \"rotation\": [\r\n        0.8424507306891859,\r\n        -0.060700467270859246,\r\n        -0.08429438624999284,\r\n        0.5286649941892249\r\n      ],\r\n      \"translation\": [\r\n        1.7763568394002505E-15,\r\n        15.000000000000036,\r\n        2.1316282072803006E-14\r\n      ],\r\n      \"slipType\": 0\r\n    },\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"697297595-dAxes\",\r\n      \"identityHash\": \"668969851-dAxes\",\r\n      \"rotation\": [\r\n        0.9994513121700126,\r\n        0.005872204152600798,\r\n        0.032584376511883784,\r\n        -9.220777418565591E-4\r\n      ],\r\n      \"translation\": [\r\n        2.7200464103316335E-15,\r\n        12.000000000000007,\r\n        2.1760371282653068E-14\r\n      ],\r\n      \"slipType\": 0\r\n    },\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"271999809-dAxes\",\r\n      \"identityHash\": \"2012160658-dAxes\",\r\n      \"rotation\": [\r\n        1,\r\n        0,\r\n        0,\r\n        0\r\n      ],\r\n      \"translation\": [\r\n        0,\r\n        12,\r\n        0\r\n      ],\r\n      \"slipType\": 0\r\n    },\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"342240144-dAxes\",\r\n      \"identityHash\": \"1732297837-dAxes\",\r\n      \"rotation\": [\r\n        1,\r\n        0,\r\n        0,\r\n        0\r\n      ],\r\n      \"translation\": [\r\n        -1.9721522630525295E-30,\r\n        10,\r\n        0\r\n      ],\r\n      \"slipType\": 0\r\n    },\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"1551208021-dAxes\",\r\n      \"identityHash\": \"461498644-dAxes\",\r\n      \"rotation\": [\r\n        1,\r\n        0,\r\n        0,\r\n        0\r\n      ],\r\n      \"translation\": [\r\n        4.163336342344337E-17,\r\n        0.9999999999999977,\r\n        3.608224830031759E-16\r\n      ],\r\n      \"slipType\": 0\r\n    },\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"1471192687-dAxes\",\r\n      \"identityHash\": \"1696992278-dAxes\",\r\n      \"rotation\": [\r\n        -0.8239303434471652,\r\n        0.055969489503578614,\r\n        -0.08266878083102493,\r\n        0.557828000433518\r\n      ],\r\n      \"translation\": [\r\n        2.3592239273284576E-16,\r\n        10,\r\n        1.1546319456101628E-14\r\n      ],\r\n      \"slipType\": 0\r\n    },\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"1677330051-dAxes\",\r\n      \"identityHash\": \"1345137488-dAxes\",\r\n      \"rotation\": [\r\n        0.9998754304483968,\r\n        -1.0956750756941321E-6,\r\n        0.01578364467640718,\r\n        -1.2048310155282276E-5\r\n      ],\r\n      \"translation\": [\r\n        1.7208456881689926E-15,\r\n        9.999999999999998,\r\n        1.0880185641326534E-14\r\n      ],\r\n      \"slipType\": 0\r\n    },\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"1747924262-dAxes\",\r\n      \"identityHash\": \"1261531014-dAxes\",\r\n      \"rotation\": [\r\n        0.7071067811865475,\r\n        -0.7071067811865477,\r\n        -6.10622663543836E-16,\r\n        -1.1102230246251563E-16\r\n      ],\r\n      \"translation\": [\r\n        -3.552713678800501E-15,\r\n        40.00000000000023,\r\n        3.907985046680551E-14\r\n      ],\r\n      \"slipType\": 0\r\n    },\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"279022475-dAxes\",\r\n      \"identityHash\": \"41334380-dAxes\",\r\n      \"rotation\": [\r\n        0.9213656794385262,\r\n        0.0598941602859653,\r\n        -0.004606866787812968,\r\n        0.3840270187041808\r\n      ],\r\n      \"translation\": [\r\n        -2.6469779601696886E-23,\r\n        39.99999999999999,\r\n        0\r\n      ],\r\n      \"slipType\": 0\r\n    },\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"342240144-dAxes\",\r\n      \"identityHash\": \"2113374204-dAxes\",\r\n      \"rotation\": [\r\n        0.9962007053770017,\r\n        -2.9600830948680267E-5,\r\n        -0.08708703864590614,\r\n        3.781589026092755E-5\r\n      ],\r\n      \"translation\": [\r\n        -1.9721522630525295E-30,\r\n        10,\r\n        0\r\n      ],\r\n      \"slipType\": 0\r\n    },\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"1345137488-dAxes\",\r\n      \"identityHash\": \"484845591-dAxes\",\r\n      \"rotation\": [\r\n        1,\r\n        4.336808689942016E-19,\r\n        2.168404344971008E-19,\r\n        1.7347234759768063E-18\r\n      ],\r\n      \"translation\": [\r\n        1.5543122344752192E-15,\r\n        9.999999999999998,\r\n        9.547918011776346E-15\r\n      ],\r\n      \"slipType\": 0\r\n    },\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"1404698504-dAxes\",\r\n      \"identityHash\": \"1339194081-dAxes\",\r\n      \"rotation\": [\r\n        1,\r\n        0,\r\n        0,\r\n        0\r\n      ],\r\n      \"translation\": [\r\n        0,\r\n        40,\r\n        0\r\n      ],\r\n      \"slipType\": 0\r\n    },\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"1482313974-dAxes\",\r\n      \"identityHash\": \"1196370580-dAxes\",\r\n      \"rotation\": [\r\n        0.9213656794385262,\r\n        0.0598941602859653,\r\n        -0.004606866787812968,\r\n        0.3840270187041808\r\n      ],\r\n      \"translation\": [\r\n        -3.730349362740526E-14,\r\n        40.000000000000504,\r\n        -2.1316282072803006E-14\r\n      ],\r\n      \"slipType\": 0\r\n    },\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"650769958-dAxes\",\r\n      \"identityHash\": \"352850808-dAxes\",\r\n      \"rotation\": [\r\n        0.9999808135790605,\r\n        -0.004980483297717656,\r\n        -0.0036608197535983747,\r\n        4.0701180951872515E-4\r\n      ],\r\n      \"translation\": [\r\n        0,\r\n        1,\r\n        0\r\n      ],\r\n      \"slipType\": 0\r\n    },\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"1696992278-dAxes\",\r\n      \"identityHash\": \"623575659-dAxes\",\r\n      \"rotation\": [\r\n        -0.6796696327329125,\r\n        0.04473574096779429,\r\n        -0.21553623487598816,\r\n        0.6997085359463991\r\n      ],\r\n      \"translation\": [\r\n        4.618527782440651E-14,\r\n        15.000000000000043,\r\n        0\r\n      ],\r\n      \"slipType\": 0\r\n    },\r\n    {\r\n      \"bases\": {\r\n        \"x\": [\r\n          1,\r\n          0,\r\n          0\r\n        ],\r\n        \"y\": [\r\n          0,\r\n          1,\r\n          0\r\n        ],\r\n        \"z\": [\r\n          0,\r\n          0,\r\n          1\r\n        ]\r\n      },\r\n      \"parent\": \"271999809-dAxes\",\r\n      \"identityHash\": \"1363136220-dAxes\",\r\n      \"rotation\": [\r\n        0.9994513121700126,\r\n        0.005872204152600798,\r\n        0.032584376511883784,\r\n        -9.220777418565591E-4\r\n      ],\r\n      \"translation\": [\r\n        0,\r\n        12,\r\n        0\r\n      ],\r\n      \"slipType\": 0\r\n    }\r\n  ],\r\n  \"IKPins\": [\r\n    {\r\n      \"pinWeight\": 1,\r\n      \"priorities\": {\r\n        \"x\": 1.5,\r\n        \"y\": 1.5,\r\n        \"z\": 1.5\r\n      },\r\n      \"identityHash\": \"79477998-dIKPin\",\r\n      \"forBone\": \"871240088-dBone\",\r\n      \"isEnabled\": true,\r\n      \"axes\": \"1615751886-dAxes\",\r\n      \"depthFalloff\": 0\r\n    },\r\n    {\r\n      \"pinWeight\": 1,\r\n      \"priorities\": {\r\n        \"x\": 1,\r\n        \"y\": 0,\r\n        \"z\": 1\r\n      },\r\n      \"identityHash\": \"1377201857-dIKPin\",\r\n      \"forBone\": \"1757452533-dBone\",\r\n      \"isEnabled\": true,\r\n      \"axes\": \"1718264580-dAxes\",\r\n      \"depthFalloff\": 0\r\n    },\r\n    {\r\n      \"pinWeight\": 1,\r\n      \"priorities\": {\r\n        \"x\": 1,\r\n        \"y\": 1,\r\n        \"z\": 1\r\n      },\r\n      \"identityHash\": \"1664157492-dIKPin\",\r\n      \"forBone\": \"39460173-dBone\",\r\n      \"isEnabled\": true,\r\n      \"axes\": \"2003605892-dAxes\",\r\n      \"depthFalloff\": 0\r\n    },\r\n    {\r\n      \"pinWeight\": 1,\r\n      \"priorities\": {\r\n        \"x\": 1,\r\n        \"y\": 0,\r\n        \"z\": 1\r\n      },\r\n      \"identityHash\": \"241012923-dIKPin\",\r\n      \"forBone\": \"523988834-dBone\",\r\n      \"isEnabled\": true,\r\n      \"axes\": \"1335732807-dAxes\",\r\n      \"depthFalloff\": 0\r\n    }\r\n  ]\r\n}");
            writer.close();
        } catch (IOException e) {
            System.out.println("Can't write file.");
            e.printStackTrace();
        }
        loadedArmature = ewbik.processing.IO.LoadArmature_singlePrecision("Humanoid_Holding_Item.arm");
        worldNode3D = (Node3D) loadedArmature.localAxes().getParentAxes();
        if (worldNode3D == null) {
            worldNode3D = new Node3D();
            loadedArmature.localAxes().setParent(worldNode3D);
        }
        updatePinList();
        cubeNode3D = new Node3D();

        activePin = pins.get(pins.size() - 1);

        loadedArmature.setPerformanceMonitor(true); // print performance stats

        // Tell the Bone class that all bones should draw their kusudamas.
        Bone.setDrawKusudamas(false);

        /**
         * The armature we're loading is already posed such that its hands touch
         * a box. So all we need to do is , first
         * move our box into the appropriate position
         */
        cubeNode3D.translateTo(new PVector(-13, -27, 32));
        cubeNode3D.setRelativeToParent(worldNode3D);
        /**
         * and then specify that the transformations of the left hand and right hand
         * pins
         * should be computed relative to the axes of the cube we're drawing,
         * Thereby, any time we transform the parent cube's axes, the pins will follow.
         */
        loadedArmature.getBoneName("left hand").getIKPin().getAxes().setParent(cubeNode3D);
        loadedArmature.getBoneName("right hand").getIKPin().getAxes().setParent(cubeNode3D);

    }

    public void draw() {
        if (mousePressed) {
            if (cubeMode) {
                cubeNode3D.translateTo(new PVector(ui.mouse.x, ui.mouse.y, cubeNode3D.calculatePosition().z));
            } else {
                activePin.translateTo(new PVector(ui.mouse.x, ui.mouse.y, activePin.getLocation_().z));
            }
            loadedArmature.IKSolver(loadedArmature.getRootBone());
        } else {
            worldNode3D.rotateAboutY(0.0f, true);
        }

        String additionalInstructions = "Hit the 'C' key to select or deselect the cube";
        additionalInstructions += "\n HIT THE S KEY TO SAVE."
                + "\n HIT THE L KEY TO LOAD THE CURRENT ARMATURE CONFIGURATION.";
        // Decrease the numerator to increase the zoom.
        zoomScalar = 200f / height;
        ui.drawScene(zoomScalar, 12f, () -> drawHoldCube(), loadedArmature, additionalInstructions, activePin,
                cubeNode3D,
                cubeMode);
    }
    
    public void drawHoldCube() {
        PGraphics currentDisplay = ui.getCurrentDrawSurface();
        if (ui.display == currentDisplay) {
            currentDisplay.fill(60, 60, 60);
            currentDisplay.strokeWeight(1);
            currentDisplay.stroke(255);
        } else {
            currentDisplay.fill(0, 0, 0, 255);
            currentDisplay.emissive(0);
            currentDisplay.noStroke();
        }
        currentDisplay.pushMatrix();
        currentDisplay.applyMatrix(cubeNode3D.getGlobalPMatrix());
        currentDisplay.box(40, 20, 20);
        currentDisplay.popMatrix();
    }

    public void mouseWheel(MouseEvent event) {
        float e = event.getCount();
        Node3D node3D = cubeMode ? cubeNode3D
                : (Node3D) activePin.getAxes();
        if (event.isShiftDown()) {
            node3D.rotateAboutZ(e / TAU, true);
        } else if (event.isControlDown()) {
            node3D.rotateAboutX(e / TAU, true);
        } else {
            node3D.rotateAboutY(e / TAU, true);
        }
        activePin.solveIKForThisAndChildren();
    }

    public void keyPressed() {
        if (key == CODED) {
            if (keyCode == DOWN) {
                cubeMode = false;
                int currentPinIndex = (pins.indexOf(activePin) + 1) % pins.size();
                activePin = pins.get(currentPinIndex);
            } else if (keyCode == UP) {
                cubeMode = false;
                int idx = pins.indexOf(activePin);
                int currentPinIndex = (pins.size() - 1) - (((pins.size() - 1) - (idx - 1)) % pins.size());
                activePin = pins.get(currentPinIndex);
            }
        } else if (key == 'c') {
            cubeMode = !cubeMode;
        } else if (key == 's') {
            println("Saving");
            ewbik.data.EWBIKSaver newSaver = new ewbik.data.EWBIKSaver();
            newSaver.saveArmature(loadedArmature, "Humanoid_Holding_Item.arm");
        } else if (key == 'l') {
            loadedArmature = ewbik.processing.IO.LoadArmature_singlePrecision("Humanoid_Holding_Item.arm");
            loadedArmature.updateBonechains();
            loadedArmature.IKSolver(loadedArmature.getRootBone(), 0.5f, 20, 1);

            Bone.setDrawKusudamas(true);
        }
    }

    public void updatePinList() {
        pins.clear();
        recursivelyAddToPinnedList(pins, loadedArmature.getRootBone());
    }

    public void recursivelyAddToPinnedList(ArrayList<IKPin> pins, Bone descendedFrom) {
        @SuppressWarnings("unchecked")
        ArrayList<Bone> pinnedChildren = (ArrayList<Bone>) descendedFrom.getMostImmediatelyPinnedDescendants();
        for (Bone b : pinnedChildren) {
            IKPin pin = (IKPin) b.getIKPin();
            pins.add(pin);
        }
        for (Bone b : pinnedChildren) {
            ArrayList<Bone> children = b.getChildren();
            for (Bone b2 : children) {
                recursivelyAddToPinnedList(pins, b2);
            }
        }
    }

}
